name: Prepare data used in subsequent jobs
description: Set up build matrix and check configuration
inputs:
  cloudsmithAPIKey:
    description:  Secret Cloudsmith API key
    required: false
outputs:
  GithubRegistryURL:
    description:  GitHub registry URL
    value: https://docker.pkg.github.com
  HasCloudsmithAPIKey:
    description: "If $CLOUDSMITH_API_KEY set, 'true', otherwise 'false'"
    value: ${{ steps.cloudsmith_checker.outputs.APIKeyPresent }}
  MainMatrix:
    description: The GitHub Actions job matrix
    value: ${{ steps.data_matrix_normalizer.outputs.matrix }}
  Timestamp:
    description: Timestamp of this run
    value: ${{ steps.timestamp_exporter.outputs.timestamp }}
runs:
  using: "composite"
  steps:
  - name: Show GitHub context as a JSON
    shell: bash {0}
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    run: |
      echo ::group::Show GitHub context
      echo "$GITHUB_CONTEXT"
      echo ::endgroup::

  - name: Prepare matrix from JSON
    id: data_matrix_normalizer
    shell: bash -e {0}
    run: |
      printf "::set-output name=matrix::%s\n" \
          "$(querybuild github_main_matrix)"
      echo ::group::Show main matrix
      querybuild --pretty --format yaml github_main_matrix
      echo ::endgroup::

  - name: Check for Cloudsmith API key in GitHub secrets storage
    id: cloudsmith_checker
    env:
      CLOUDSMITH_API_KEY: ${{ inputs.cloudsmithAPIKey }}
    shell: bash -e {0}
    run: |
      if ! [ -z "$CLOUDSMITH_API_KEY" ]
      then
        printf "%b" "Cloudsmith.io API key found; upload enabled\n"
        echo "::set-output name=APIKeyPresent::true"
      else
        printf "%b" "Cloudsmith.io API key not found; upload disabled\n"
        echo "::set-output name=APIKeyPresent::false"
      fi

  - name: Export timestamp of workflow run in seconds since epoch
    id: timestamp_exporter
    shell: bash -e {0}
    run: |
      TIMESTAMP=$(date +%s)
      echo "::set-output name=timestamp::$TIMESTAMP"
      printf "Timestamp for this workflow run is $TIMESTAMP\n"
