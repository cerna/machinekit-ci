name: Prepare data used in subsequent jobs
description: Set up build matrix and check configuration
inputs:
  CloudsmithToken:
    description:  Secret Cloudsmith token
    required: false
outputs:
  GithubRegistryURL:
    description:  GitHub registry URL
    value: https://docker.pkg.github.com
  HasCloudsmithToken:
    description: "If $CLOUDSMITH_TOKEN set, 'true', otherwise 'false'"
    value: ${{ steps.cloudsmith_checker.outputs.tokenPresent }}
  MainMatrix:
    description: The GitHub Actions job matrix
    value: ${{ steps.data_matrix_normalizer.outputs.matrix }}
  Timestamp:
    description: Timestamp of this run
    value: ${{ steps.timestamp_exporter.outputs.timestamp }}
runs:
  using: "composite"
  steps:
  - name: Show GitHub context as a JSON
    shell: bash {0}
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    run: |
      echo "$GITHUB_CONTEXT"

  - name: Prepare matrix from JSON
    id: data_matrix_normalizer
    shell: bash -e {0}
    run: |
      printf "::set-output name=matrix::%s\n" \
          "$(querybuild github_main_matrix)"
      printf "JSON object for Main Matrix:\n====\n%s\n" \
          "$(querybuild --pretty github_main_matrix)"

  - name: Check for Cloudsmith auth token in GitHub secrets storage
    id: cloudsmith_checker
    env:
      CLOUDSMITH_TOKEN: ${{ inputs.CloudsmithToken }}
    shell: bash -e {0}
    run: |
      if ! [ -z "$CLOUDSMITH_TOKEN" ]
      then
        printf "%b" "Cloudsmith.io auth token found; upload enabled\n"
        echo "::set-output name=tokenPresent::true"
      else
        printf "%b" "Cloudsmith.io auth token not found; upload disabled\n"
        echo "::set-output name=tokenPresent::false"
      fi

  - name: Export timestamp of workflow run in seconds since epoch
    id: timestamp_exporter
    shell: bash -e {0}
    run: |
      TIMESTAMP=$(date +%s)
      echo "::set-output name=timestamp::$TIMESTAMP"
      printf "Timestamp for this workflow run is $TIMESTAMP\n"
